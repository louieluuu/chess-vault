@mixin flex($direction) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
}

body {
  font-family: 'Courier New';
}

.container {
  @include flex(row);

  gap: 5rem;
}

.container__variations {
  @include flex(column);

  gap: 2rem;
}

.chessboard {
  position: relative;
}

.chessboard__result {
  position: absolute;

  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  z-index: 9;
  pointer-events: none;

  width: 9dvh;
  height: 9dvh;

  opacity: 0.975;

  &--correct {
    @extend .chessboard__result;
    color: hsl(123, 50%, 45%);
  }

  &--incorrect {
    @extend .chessboard__result;
    color: hsl(0, 50%, 50%);
  }

  &--booked {
    @extend .chessboard__result;
    color: hsl(50, 75%, 50%);
  }
}

.menu {
  @include flex(column);

  position: relative;

  height: auto;
  width: 50dvh;
}

.menu__container--buttons {
  @include flex(row);

  width: 100%;
  justify-content: space-between;
}

.menu__btn {
  @include flex(row);

  color: white;
  background-color: hsl(207, 7%, 25%);

  cursor: pointer;
  font-family: 'Segoe UI';

  height: 3rem;

  gap: 1rem;

  padding: 1.5rem 2rem;

  border-radius: 0.5rem;
  font-size: 1rem;

  &:hover {
    background-color: hsl(207, 7%, 30%);
  }

  &:focus {
    outline: none;
  }

  &--disabled {
    @extend .menu__btn;

    cursor: default;
    opacity: 0.5;

    &:hover {
      background-color: hsl(207, 7%, 25%);
    }
  }
}

.menu__icon {
  cursor: pointer;

  font-size: 2rem;

  background: transparent;
  color: hsl(50, 60%, 50%);

  &--disabled {
    @extend .menu__icon;
    cursor: default;
  }
}

.menu__label {
  color: hsl(50, 100%, 50%);

  &--count {
    @extend .menu__label;

    font-weight: bold;
  }

  &--booked {
    @extend .menu__label;

    color: white;
    opacity: 0.5;
  }
}

.menu__message {
  position: absolute;
  top: -75%;

  color: hsl(50, 100%, 50%);
  font-weight: bold;

  &--hidden {
    @extend .menu__message;
    visibility: hidden;
  }
}

.grade-menu {
  @include flex(row);

  position: absolute;

  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  z-index: 8;

  width: 55dvh;

  gap: 3rem;

  padding: 2rem;
  background-color: hsl(240, 7%, 11%);
  border-radius: 1rem;
}

.grade {
  @include flex(column);
}

.grade__button {
  width: calc(55 / 6 * 1dvh);
  height: 2.5dvh;

  cursor: pointer;

  transition: transform 0.1s ease;

  color: black;

  &:active {
    transform: scale(0.95);
  }

  &--again {
    @extend .grade__button;
    background-color: hsl(5, 81%, 73%);

    &:hover {
      background-color: hsl(5, 81%, 70%);
    }
  }

  &--hard {
    @extend .grade__button;
    background-color: hsl(30, 89%, 79%);

    &:hover {
      background-color: hsl(30, 89%, 72%);
    }
  }

  &--good {
    @extend .grade__button;
    background-color: hsl(49, 100%, 88%);

    &:hover {
      background-color: hsl(49, 100%, 78%);
    }
  }

  &--easy {
    @extend .grade__button;
    background-color: hsl(118, 46%, 84%);

    &:hover {
      background-color: hsl(118, 45%, 74%);
    }
  }
}

.vault {
  @include flex(column);
  justify-content: flex-start;
  align-items: flex-start;

  position: relative;

  height: 75dvh;
  width: 75dvh;

  overflow-x: hidden;
  overflow-y: auto;

  gap: 3dvh;
  padding: 3dvh;

  border-radius: 2rem;

  background-color: hsla(204, 7%, 14%, 97.5%);

  // TODO: This is all Gemini's styling, can audit/change later as needed
  /* --- Scrollbar styling --- */

  /* The scrollbar itself */
  &::-webkit-scrollbar {
    width: 8px; /* Width for vertical scrollbar */
    height: 8px; /* Height for horizontal scrollbar (if any) */
  }

  /* The track (the background of the scrollbar) */
  &::-webkit-scrollbar-track {
    background: #f1f1f1; /* Light gray background */
    border-radius: 10px; /* Rounded corners for the track */
  }

  /* The thumb (the draggable part of the scrollbar) */
  &::-webkit-scrollbar-thumb {
    background: #888; /* Darker gray for the thumb */
    border-radius: 10px; /* Rounded corners for the thumb */
  }

  /* On hover, make the thumb slightly darker */
  &::-webkit-scrollbar-thumb:hover {
    background: #555; /* Even darker on hover */
  }

  /* Optional: Styles for scrollbar corners (where vertical and horizontal meet) */
  &::-webkit-scrollbar-corner {
    background: transparent; /* Or a matching background color */
  }
}

.vault__icon {
  position: absolute;
  z-index: 9;
  top: 11%;
  left: 43.5%;

  font-size: 5dvh;

  transition: transform 0.4s ease-out;

  &--white {
    @extend .vault__icon;
    color: white;
    filter: drop-shadow(0 0 1px rgba(0, 165, 255, 0.8)) drop-shadow(0 0 1px rgba(0, 165, 255, 0.6));
    transform: rotateY(0deg);
  }

  &--black {
    @extend .vault__icon;
    color: black;
    filter: drop-shadow(0 0 1px white) drop-shadow(0 0 1px white) drop-shadow(0 0 1px white)
      drop-shadow(0 0 1px white);
    transform: rotateY(180deg);
  }
}

.vault__icon-mode-toggle {
  position: absolute;
  z-index: 9;
  top: 1%;
  right: 5%;

  font-size: 2dvh;
}

.opening-group {
}

.opening-group__name {
  @include flex(row);

  align-items: center;
  justify-content: flex-start;

  gap: 1rem;

  font-weight: bold;
  margin-bottom: 1rem;
}

.opening-group__icon {
  cursor: pointer;
  font-size: 1.5rem;

  &:hover {
    color: hsl(207, 7%, 75%);
  }
}

// Chessground DOM looks like this:
// thumbnail
//  cg-wrap
//    cg-helper
//      cg-container
//        cg-board

// cg-container actually extends vertically past the cg-wrap

.thumbnails-container {
  display: flex;
  flex-wrap: wrap;
  gap: 3dvh;
}

.thumbnail {
  overflow: hidden; // Clip anything that extends beyond the actual chessboard
  opacity: 0.6;

  // Set chessboard size here instead of through Chessground props
  // TODO: if the board gets "too small" then it starts taking up a massive vertical gap, not sure why...
  .cg-wrap {
    width: 25dvh;
    height: 25dvh;
  }

  &:hover {
    opacity: 1;
    box-shadow: 0 0 0 3px hsl(50, 75%, 50%);
    transform: translateY(-2px);
  }

  &__options {
    @include flex(row);

    justify-content: flex-end;

    gap: 0.5rem;

    padding-bottom: 0.3rem;

    cursor: pointer;
    font-size: 1.5rem;
  }

  &__icon {
    &:hover {
      color: hsl(207, 7%, 75%);
    }
  }
}
